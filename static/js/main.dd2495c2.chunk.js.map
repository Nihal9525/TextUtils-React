{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","backgroundColor","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.dd2495c2.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n              <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                  <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                  <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                    <li className=\"nav-item\">\r\n                      <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                    </li>\r\n                    {/* <li className=\"nav-item\">\r\n                      <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n                    </li> */}\r\n                  </ul>\r\n                  {/* <form className=\"d-flex\">\r\n                    <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                    <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                  </form> */}\r\n                  <div className={`form-check form-switch text-${props.mode===\"light\"?\"dark\":\"light\"}`}>\r\n                    <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                    <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">DarkMode</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title : PropTypes.string}\r\n","import React , {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const [text , setText] = useState(\"\")\r\n\r\n    const handleUpCLick = () => {\r\n        // console.log(\"Uppercase was Clicked\")\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase\",\"success\")\r\n    }\r\n\r\n    const handleLoCLick = () => {\r\n        // console.log(\"Uppercase was Clicked\")\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase\",\"success\")\r\n    }\r\n\r\n    const handleClear = () => {\r\n        let newText = (\"\")\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared\",\"success\")\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"mybox\")\r\n        text.select()\r\n        navigator.clipboard.writeText(text.value) \r\n        props.showAlert(\"Copied to clipboard\",\"success\")\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"SOmething is chnaged in textarea\")\r\n        setText(event.target.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mb-3 container\" style={{color:props.mode===\"dark\"?\"white\":\"black\"}}>\r\n\r\n\r\n            <h1>{props.heading}</h1>\r\n\r\n\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} style={{backgroundColor:props.mode===\"dark\"?\"grey\":\"white\" , color:props.mode===\"dark\"?\"white\":\"black\"}} onChange={handleOnChange} id=\"mybox\" rows=\"8\"></textarea>\r\n            </div>\r\n\r\n                <button className=\"btn btn-primary my-2 mx-2\" onClick={handleUpCLick}>Convert to Uppercase</button>\r\n\r\n                <button className=\"btn btn-primary my-2 mx-2\" onClick={handleLoCLick}>Convert to Lowercase</button>\r\n\r\n                <button className=\"btn btn-primary my-2 mx-2\" onClick={handleClear}>Clear Text</button>\r\n\r\n                <button className=\"btn btn-primary my-2 mx-2\" onClick={handleCopy}>Copy Text</button>\r\n\r\n            </div> \r\n\r\n            <div className=\"container my-2\" style={{color:props.mode===\"dark\"?\"white\":\"black\"}}>\r\n                <h1>Your Text Summary</h1>\r\n                <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n                <h2>Preview</h2>\r\n                <p>{text.length>0?text:\"Enter text to preview it here\"}</p>\r\n            </div>\r\n      </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        \r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React , {useState} from 'react'\nimport Navbar from './components/Navbar'\nimport TextForm from './components/TextForm'\n// import About from \"./components/About\"\nimport Alert from './components/Alert'\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n  \n// } from \"react-router-dom\";\n\nconst App = () => {\n\n  const [mode, setMode] = useState(\"light\")\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message,type) => {\n    setAlert({\n      msg : message,\n      type : type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if(mode===\"light\"){\n      setMode(\"dark\")\n      document.body.style.backgroundColor = \"grey\"\n      showAlert(\"Dark Mode is Activated\",\"success\")\n    }\n    else{\n      setMode(\"light\")\n      document.body.style.backgroundColor = \"white\"\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n    <Alert alert={alert}/>\n    <div className=\"container \">\n    {/* <Switch> */}\n          {/* <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          \n          {/* <Route exact path=\"/\"> */}\n            <TextForm showAlert={showAlert} heading = \"Enter the text below to analyze\" mode={mode}/>\n          {/* </Route> */}\n    {/* </Switch> */}\n    </div>\n    {/* </Router> */}\n     \n    \n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}